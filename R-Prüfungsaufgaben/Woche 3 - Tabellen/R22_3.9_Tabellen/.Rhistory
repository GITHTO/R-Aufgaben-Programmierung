codeoceanR::rt_score()
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_1.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_1.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_1.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_1.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
dir()
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
# A4 ----
# Lese die Geburten-Daten in R ein. Beachte, dass NAs als 999 eingetragen sind.
geburten <- read.table("geburten.txt", na="NA" )
# A4 ----
# Lese die Geburten-Daten in R ein. Beachte, dass NAs als 999 eingetragen sind.
geburten <- read.table("R39d_Geburten.txt", na="NA" )
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
# A4 ----
# Lese die Geburten-Daten in R ein. Beachte, dass NAs als 999 eingetragen sind.
geburten <- read.table("R39d_Geburten.txt", sep = "\t" )
# A4 ----
# Lese die Geburten-Daten in R ein. Beachte, dass NAs als 999 eingetragen sind.
geburten <- read.table("R39d_Geburten.txt", sep = "\t", header = TRUE,  )
# A5 ----
# A5 ----
# Schreibe den eingebauten Datensatz 'mtcars' in eine Textdatei names motor_trend.txt.
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
# A5 ----
# Schreibe den eingebauten Datensatz 'mtcars' in eine Textdatei names motor_trend.txt.
# Unterdrücke die Einbeziehung von rownames.
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
View(geburten)
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
View(geburten)
View(geburten)
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
View(geburten)
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
str(geburten)
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_2.R")
str(mortalitaet)
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
laenderdaten <- fusion
# A8 ----
# Schreibe eine Funktion, die die Anzahl der NAs pro Spalte eines data.frame berechnet.
# Hinweis: Es gibt eine kurze Lösung (18 Zeichen im Body der Funktion).
nNA <- function(df) 0
nNA(data.frame(NA, 1:5, c(NA,6,7,NA,8), 11:15)) # soll sein: 5,0,2,0
# Führe die Informationen aus den beiden Datensätzen zusammen.
# Das resultierende data.frame sollte die Spalten "country", "spending", "mort" enthalten.
# Im echten Leben wäre die Reihenfolge austauschbar (-> "COUNTRY" als Name), für den Test nicht.
# Länder, die in einem Datensatz fehlen, sollten einen NA-Wert in dieser Spalte haben.
laenderdaten <-
# A8 ----
# Schreibe eine Funktion, die die Anzahl der NAs pro Spalte eines data.frame berechnet.
# Hinweis: Es gibt eine kurze Lösung (18 Zeichen im Body der Funktion).
nNA <- function(df) 0
# Führe die Informationen aus den beiden Datensätzen zusammen.
# Das resultierende data.frame sollte die Spalten "country", "spending", "mort" enthalten.
# Im echten Leben wäre die Reihenfolge austauschbar (-> "COUNTRY" als Name), für den Test nicht.
# Länder, die in einem Datensatz fehlen, sollten einen NA-Wert in dieser Spalte haben.
laenderdaten <- 0
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
source("C:/RAufgabe/W3/TabelleW3/R39_Tabellen_3.R")
codeoceanR::rt_score()
codeoceanR::rt_score()
codeoceanR::rt_submit()
codeoceanR::rt_score()
#codeoceanR::rt_submit()
codeoceanR::rt_create()
